---
title: Lists
description: Learn about the basic about R lists.
date: last-modified
image: ../img/under_construction.svg
params: 
  solutions: FALSE
  sub_title: "**------ With Solutions ------**"
categories:
  - Satellite
  - R basics
  - Data types
  - Lists
---

```{r setup}
#| include: false
#| eval: true
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)

solutions <- params$solutions
```


![](../img/under_construction.svg)


<!-- Objectives -->
<!-- ---------------------------------------------------------------------------------------------------- -->
<!-- - Objective 1 -->
<!-- - Objective 2 -->


<!-- ## Lists -->

<!-- Unlike simple vectors, lists can contain multiple types of data, such as strings, numerics, and even other lists! Lists are created with the function `list()`. Typically, though not always, lists will be *named*, meaning each value is given a name:   -->

<!-- ```{r} -->
<!-- collect_moissala <- list( -->
<!--   location = "Moissala",  -->
<!--   cases =  c(2, 5, 8, 0, 4) -->
<!-- ) -->

<!-- collect_moissala  -->
<!-- ``` -->

<!-- We can use the function `str()` to see the structure of an object. -->

<!-- ```{r} -->
<!-- str(collect_moissala) -->
<!-- ``` -->

<!-- To access the elements in a named list, we can either write it’s numeric index in **double** square brackets or writing the element’s name after a `$`. Using the numeric index in **single** brackets will return that element as a list. -->

<!-- ```{r} -->
<!-- collect_moissala$location   # returns the element named location -->
<!-- collect_moissala[[1]]       # returns the first element -->
<!-- collect_moissala[1]         # returns the first element as a list -->
<!-- ``` -->

<!-- ::: {.callout .callout-code} -->
<!-- **Code.**  Create a named list containing `cases` as the first element, a numeric vector (of your choice) as the second, and a text vector (of your choice) as the third. -->
<!-- ::: -->

<!-- NEEDS TO BE CHANGED? COMES FROM INTRODUCTION -->

<!-- ```{r} -->
<!-- #| include = solutions, -->
<!-- #| eval = FALSE -->
<!-- # SOLUTION -->

<!-- my_list <- list( -->
<!--   first_element = cases, -->
<!--   second_element = c(1, 3, 5), -->
<!--   third_element = c("admin 1", "admin 2") -->
<!-- ) -->
<!-- ``` -->

<!-- ::: {.callout .callout-code} -->
<!-- **Code.**  Access the second and third element of your list. Try write multiple solutions to test our the `$` operator as well as square brackets. -->
<!-- ::: -->

<!-- ```{r} -->
<!-- #| include = solutions -->
<!-- # SOLUTION -->
<!-- liste_exo$un_vecteur -->
<!-- liste_exo[[3]]   # si on veut le contenu de l'element 3 -->
<!-- liste_exo[3]     # si on veut une liste -->
<!-- ``` -->

<!-- For the moment, we aren’t going to dig deeper into lists as you probably won’t use them that often while you are getting started in R. As you become more advanced, however, it’s a type of data structure that you will encounter often. -->



<!-- TODO -->
<!-- Explain that dataframes are list of vectors and re-illustrate some of the concpets with them to bridge the gap to what thgey already leanred -->
